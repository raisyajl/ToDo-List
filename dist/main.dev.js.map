{"version":3,"sources":["main.js"],"names":["taskNotification","document","querySelector","finishNotification","listContainer","input","inputSubmit","KEY","storeData","addEventListener","push","id","Date","now","text","value","finish","saveData","render","removeListElement","task","forEach","data","listItem","createElement","icon","classList","add","deleteList","innerHTML","appendChild","textContent","filter","localStorage","setItem","JSON","stringify","getData","storedData","getItem","parse"],"mappings":"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","sourcesContent":["const taskNotification = document.querySelector(\"[task-notification]\");\r\nconst finishNotification = document.querySelector(\"[finish-notification]\");\r\nconst listContainer = document.querySelector(\"[list-container]\");\r\nconst input = document.querySelector(\".input-list\"); // Corrected the selector\r\nconst inputSubmit = document.querySelector(\".button-input-submit\"); // Corrected the selector\r\n\r\nconst KEY = \"TODOLIST\";\r\nlet storeData = [];\r\n\r\ninputSubmit.addEventListener(\"click\", () => {\r\n  storeData.push({\r\n    id: Date.now(),\r\n    text: input.value,\r\n    finish: false\r\n  });\r\n  saveData();\r\n  render();\r\n\r\n  // Reset input value to empty string after adding item\r\n  input.value = \"\";\r\n});\r\n\r\nfunction render() {\r\n  removeListElement();\r\n\r\n  let finish = 0;\r\n  let task = 0;\r\n\r\n  storeData.forEach((data) => {\r\n    data.finish ? finish++ : task++;\r\n\r\n    const listItem = document.createElement(\"div\");\r\n    const text = document.createElement(\"div\");\r\n    const icon = document.createElement(\"i\");\r\n\r\n    icon.classList.add(\"fas\", \"fa-trash-alt\", \"delete-list\");\r\n    icon.addEventListener(\"click\", () => deleteList(data.id));\r\n\r\n    listItem.classList.add(\"list-item\");\r\n    text.classList.add(\"list-text\");\r\n    text.innerHTML = data.text;\r\n\r\n    listItem.appendChild(text);\r\n    listItem.appendChild(icon);\r\n    listContainer.appendChild(listItem);\r\n  });\r\n\r\n  finishNotification.textContent = `Finish ${finish}`;\r\n  taskNotification.textContent = `Task ${task}`;\r\n}\r\n\r\nfunction removeListElement() {\r\n  listContainer.innerHTML = \"\"; // Simplified removing child nodes\r\n}\r\n\r\nfunction deleteList(id) {\r\n  storeData = storeData.filter(data => data.id !== id);\r\n  saveData();\r\n  render();\r\n}\r\n\r\nfunction saveData() {\r\n  localStorage.setItem(KEY, JSON.stringify(storeData));\r\n}\r\n\r\nfunction getData() {\r\n  const storedData = localStorage.getItem(KEY);\r\n  storeData = storedData ? JSON.parse(storedData) : [];\r\n}\r\n\r\ngetData();\r\nrender();\r\n"],"file":"main.dev.js"}